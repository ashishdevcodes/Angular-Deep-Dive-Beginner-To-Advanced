
Angular @HostBinding Cheat Sheet

------------------------------------------------------------

@HostBinding() Overview:
- Purpose: Bind a directive/component class property to the host DOM element's property.
- Works on: Mostly DOM properties.
- Special Syntax for Attributes: Use 'attr.' prefix (e.g., @HostBinding('attr.aria-label')).
- Updates: Dynamically as the class property changes.
- Pairing: Often paired with @HostListener() for full dynamic behavior.

------------------------------------------------------------

DOM Properties vs Attributes:

| Feature            | DOM Property                      | Attribute                       |
|--------------------|------------------------------------|---------------------------------|
| Stored in          | JavaScript runtime memory          | Static HTML markup              |
| Mutable at runtime | Yes                                | No                              |
| Example            | input.value = 'text'               | <input value="text">             |
| Used with HostBinding | Primary usage                   | Sometimes via 'attr.' prefix    |

------------------------------------------------------------

Common @HostBinding Targets:

| Binding Target | Example Usage                                      | Notes                           |
|----------------|-----------------------------------------------------|---------------------------------|
| Style          | @HostBinding('style.color') color = 'red';           | Changes inline style            |
| Class          | @HostBinding('class.active') isActive = true;        | Toggles CSS class               |
| Attribute      | @HostBinding('attr.disabled') isDisabled = true;     | Sets attribute (needs 'attr.')  |
| ARIA Attributes| @HostBinding('attr.aria-expanded') expanded = false; | For accessibility compliance    |
| Tabindex       | @HostBinding('attr.tabindex') tabIndex = 0;          | Manage keyboard navigation      |

------------------------------------------------------------

Important Best Practices for HostBinding:
- Keep HostBinding fields public (default is public).
- Prefer HostBinding over manual DOM manipulations.
- Use 'attr.' prefix when binding attributes.
- Combine with @HostListener() for dynamic behaviors.
- Use inside Directive or Component class.

------------------------------------------------------------

Quick Visual Summary:

Directive Class
  ↓
@HostBinding Decorator
  ↓
Updates
  ↓
Host Element's Property/Attribute

------------------------------------------------------------

Generated by: ChatGPT Advanced Angular Deep Dive Assistant
