
Sparse Checkout Steps for Cloning a Subdirectory from GitHub

1. **Verify the Sparse Checkout Path**
   - The path in the `sparse-checkout` file should match the folder structure in the remote repository exactly.
   - Example for cloning `angular-course` under `Section3-Local_Template_Querying`:
     ```
     Section3-Local_Template_Querying/angular-course/
     ```
   - Ensure no leading or trailing whitespaces.

2. **Reinitialize Sparse Checkout**
   - If the folder does not appear after pulling, follow these steps:
     - Disable Sparse Checkout:
       ```bash
       git config core.sparseCheckout false
       ```
     - Enable Sparse Checkout Again:
       ```bash
       git config core.sparseCheckout true
       ```
     - Open and confirm the path in the `sparse-checkout` file:
       ```plaintext
       Section3-Local_Template_Querying/angular-course/
       ```
     - Pull the changes:
       ```bash
       git pull origin main
       ```

3. **Verify the Folder in the Remote Repository**
   - Navigate to the remote GitHub repository.
   - Ensure the folder exists in the specified path.

4. **Check Local Git Status**
   - Run the following command to confirm Git recognizes the directory:
     ```bash
     git status
     ```

5. **Force Update Local Files**
   - If the folder is still missing, force Git to reset and clean the local repository:
     ```bash
     git reset --hard
     git clean -fd
     ```

6. **Re-Clone with Sparse Checkout (Optional)**
   - Create a new directory for a sparse clone:
     ```bash
     mkdir sparse-clone
     cd sparse-clone
     ```
   - Initialize the sparse checkout:
     ```bash
     git init
     git remote add origin <repository-url>
     git config core.sparseCheckout true
     ```
   - Add the path to the `sparse-checkout` file:
     ```bash
     echo "Section3-Local_Template_Querying/angular-course/" > .git/info/sparse-checkout
     ```
   - Pull the specified folder:
     ```bash
     git pull origin main
     ```

7. **Expected Outcome**
   - The specified folder should appear in your local repository.

Follow these steps whenever you need to clone a subdirectory without cloning the entire repository!

